<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.10.6 on linux)" generated="20231120 21:05:24.619" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="/mnt/c/Users/Aapo/Desktop/ohtu/viikko3/login-robot/src/tests">
<suite id="s1-s1" name="Login" source="/mnt/c/Users/Aapo/Desktop/ohtu/viikko3/login-robot/src/tests/login.robot">
<test id="s1-s1-t1" name="Login With Incorrect Password" line="7">
<kw name="Create User And Input Login Command" type="SETUP">
<kw name="Create User" library="AppLibrary">
<arg>kalle</arg>
<arg>kalle123</arg>
<msg timestamp="20231120 21:05:24.657" level="INFO">Creating user: kalle, kalle123</msg>
<status status="PASS" starttime="20231120 21:05:24.656" endtime="20231120 21:05:24.657"/>
</kw>
<kw name="Input New Command" library="AppLibrary">
<arg>login</arg>
<arg>kalle</arg>
<arg>kalle123</arg>
<msg timestamp="20231120 21:05:24.657" level="INFO">Executing command: login with arguments: ('kalle', 'kalle123')</msg>
<status status="PASS" starttime="20231120 21:05:24.657" endtime="20231120 21:05:24.657"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.656" endtime="20231120 21:05:24.657"/>
</kw>
<kw name="Input Credentials">
<arg>kalle</arg>
<arg>wrongpassword</arg>
<kw name="Input New Command" library="AppLibrary">
<arg>login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<msg timestamp="20231120 21:05:24.657" level="INFO">Executing command: login with arguments: ('kalle', 'wrongpassword')</msg>
<status status="PASS" starttime="20231120 21:05:24.657" endtime="20231120 21:05:24.658"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.657" endtime="20231120 21:05:24.658"/>
</kw>
<kw name="Output Should Contain">
<arg>Invalid username or password</arg>
<kw name="Log" library="BuiltIn">
<arg>Verifying output: ${expected_output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 21:05:24.658" level="INFO">Verifying output: Invalid username or password</msg>
<status status="PASS" starttime="20231120 21:05:24.658" endtime="20231120 21:05:24.658"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.658" endtime="20231120 21:05:24.658"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.656" endtime="20231120 21:05:24.658"/>
</test>
<test id="s1-s1-t2" name="Login With Nonexistent Username" line="11">
<kw name="Create User And Input Login Command" type="SETUP">
<kw name="Create User" library="AppLibrary">
<arg>kalle</arg>
<arg>kalle123</arg>
<msg timestamp="20231120 21:05:24.659" level="INFO">Creating user: kalle, kalle123</msg>
<status status="PASS" starttime="20231120 21:05:24.659" endtime="20231120 21:05:24.659"/>
</kw>
<kw name="Input New Command" library="AppLibrary">
<arg>login</arg>
<arg>kalle</arg>
<arg>kalle123</arg>
<msg timestamp="20231120 21:05:24.659" level="INFO">Executing command: login with arguments: ('kalle', 'kalle123')</msg>
<status status="PASS" starttime="20231120 21:05:24.659" endtime="20231120 21:05:24.659"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.659" endtime="20231120 21:05:24.659"/>
</kw>
<kw name="Input Credentials">
<arg>nonexistent_user</arg>
<arg>password123</arg>
<kw name="Input New Command" library="AppLibrary">
<arg>login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<msg timestamp="20231120 21:05:24.660" level="INFO">Executing command: login with arguments: ('nonexistent_user', 'password123')</msg>
<status status="PASS" starttime="20231120 21:05:24.659" endtime="20231120 21:05:24.660"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.659" endtime="20231120 21:05:24.660"/>
</kw>
<kw name="Output Should Contain">
<arg>User not found</arg>
<kw name="Log" library="BuiltIn">
<arg>Verifying output: ${expected_output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 21:05:24.660" level="INFO">Verifying output: User not found</msg>
<status status="PASS" starttime="20231120 21:05:24.660" endtime="20231120 21:05:24.660"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.660" endtime="20231120 21:05:24.660"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.658" endtime="20231120 21:05:24.660"/>
</test>
<status status="PASS" starttime="20231120 21:05:24.638" endtime="20231120 21:05:24.660"/>
</suite>
<suite id="s1-s2" name="Register" source="/mnt/c/Users/Aapo/Desktop/ohtu/viikko3/login-robot/src/tests/register.robot">
<test id="s1-s2-t1" name="Register With Valid Username And Password" line="7">
<kw name="Create User And Input Login Command" type="SETUP">
<kw name="Create User" library="AppLibrary">
<arg>kalle</arg>
<arg>kalle123</arg>
<msg timestamp="20231120 21:05:24.667" level="INFO">Creating user: kalle, kalle123</msg>
<status status="PASS" starttime="20231120 21:05:24.666" endtime="20231120 21:05:24.667"/>
</kw>
<kw name="Input New Command" library="AppLibrary">
<arg>login</arg>
<arg>kalle</arg>
<arg>kalle123</arg>
<msg timestamp="20231120 21:05:24.667" level="INFO">Executing command: login with arguments: ('kalle', 'kalle123')</msg>
<status status="PASS" starttime="20231120 21:05:24.667" endtime="20231120 21:05:24.667"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.666" endtime="20231120 21:05:24.667"/>
</kw>
<kw name="Input Credentials">
<arg>aapo</arg>
<arg>timo1234</arg>
<kw name="Input New Command" library="AppLibrary">
<arg>login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<msg timestamp="20231120 21:05:24.669" level="INFO">Executing command: login with arguments: ('aapo', 'timo1234')</msg>
<status status="PASS" starttime="20231120 21:05:24.668" endtime="20231120 21:05:24.669"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.667" endtime="20231120 21:05:24.669"/>
</kw>
<kw name="Output Should Contain">
<arg>New user registered</arg>
<kw name="Log" library="BuiltIn">
<arg>Verifying output: ${expected_output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 21:05:24.669" level="INFO">Verifying output: New user registered</msg>
<status status="PASS" starttime="20231120 21:05:24.669" endtime="20231120 21:05:24.670"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.669" endtime="20231120 21:05:24.670"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.665" endtime="20231120 21:05:24.670"/>
</test>
<test id="s1-s2-t2" name="Register With Already Taken Username And Valid Password" line="11">
<kw name="Create User And Input Login Command" type="SETUP">
<kw name="Create User" library="AppLibrary">
<arg>kalle</arg>
<arg>kalle123</arg>
<msg timestamp="20231120 21:05:24.671" level="INFO">Creating user: kalle, kalle123</msg>
<status status="PASS" starttime="20231120 21:05:24.671" endtime="20231120 21:05:24.671"/>
</kw>
<kw name="Input New Command" library="AppLibrary">
<arg>login</arg>
<arg>kalle</arg>
<arg>kalle123</arg>
<msg timestamp="20231120 21:05:24.671" level="INFO">Executing command: login with arguments: ('kalle', 'kalle123')</msg>
<status status="PASS" starttime="20231120 21:05:24.671" endtime="20231120 21:05:24.671"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.670" endtime="20231120 21:05:24.671"/>
</kw>
<kw name="Input Credentials">
<arg>aapo</arg>
<arg>timo1234</arg>
<kw name="Input New Command" library="AppLibrary">
<arg>login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<msg timestamp="20231120 21:05:24.673" level="INFO">Executing command: login with arguments: ('aapo', 'timo1234')</msg>
<status status="PASS" starttime="20231120 21:05:24.673" endtime="20231120 21:05:24.673"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.672" endtime="20231120 21:05:24.673"/>
</kw>
<kw name="Output Should Contain">
<arg>User with username aapo already exists</arg>
<kw name="Log" library="BuiltIn">
<arg>Verifying output: ${expected_output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 21:05:24.674" level="INFO">Verifying output: User with username aapo already exists</msg>
<status status="PASS" starttime="20231120 21:05:24.673" endtime="20231120 21:05:24.674"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.673" endtime="20231120 21:05:24.674"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.670" endtime="20231120 21:05:24.674"/>
</test>
<test id="s1-s2-t3" name="Register With Too Short Username And Valid Password" line="15">
<kw name="Create User And Input Login Command" type="SETUP">
<kw name="Create User" library="AppLibrary">
<arg>kalle</arg>
<arg>kalle123</arg>
<msg timestamp="20231120 21:05:24.675" level="INFO">Creating user: kalle, kalle123</msg>
<status status="PASS" starttime="20231120 21:05:24.675" endtime="20231120 21:05:24.675"/>
</kw>
<kw name="Input New Command" library="AppLibrary">
<arg>login</arg>
<arg>kalle</arg>
<arg>kalle123</arg>
<msg timestamp="20231120 21:05:24.676" level="INFO">Executing command: login with arguments: ('kalle', 'kalle123')</msg>
<status status="PASS" starttime="20231120 21:05:24.676" endtime="20231120 21:05:24.676"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.675" endtime="20231120 21:05:24.676"/>
</kw>
<kw name="Input Credentials">
<arg>a</arg>
<arg>a</arg>
<kw name="Input New Command" library="AppLibrary">
<arg>login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<msg timestamp="20231120 21:05:24.676" level="INFO">Executing command: login with arguments: ('a', 'a')</msg>
<status status="PASS" starttime="20231120 21:05:24.676" endtime="20231120 21:05:24.676"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.676" endtime="20231120 21:05:24.676"/>
</kw>
<kw name="Output Should Contain">
<arg>Invalid username format</arg>
<kw name="Log" library="BuiltIn">
<arg>Verifying output: ${expected_output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 21:05:24.677" level="INFO">Verifying output: Invalid username format</msg>
<status status="PASS" starttime="20231120 21:05:24.677" endtime="20231120 21:05:24.677"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.676" endtime="20231120 21:05:24.677"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.674" endtime="20231120 21:05:24.677"/>
</test>
<test id="s1-s2-t4" name="Register With Enough Long But Invalid Username And Valid Password" line="19">
<kw name="Create User And Input Login Command" type="SETUP">
<kw name="Create User" library="AppLibrary">
<arg>kalle</arg>
<arg>kalle123</arg>
<msg timestamp="20231120 21:05:24.678" level="INFO">Creating user: kalle, kalle123</msg>
<status status="PASS" starttime="20231120 21:05:24.678" endtime="20231120 21:05:24.678"/>
</kw>
<kw name="Input New Command" library="AppLibrary">
<arg>login</arg>
<arg>kalle</arg>
<arg>kalle123</arg>
<msg timestamp="20231120 21:05:24.678" level="INFO">Executing command: login with arguments: ('kalle', 'kalle123')</msg>
<status status="PASS" starttime="20231120 21:05:24.678" endtime="20231120 21:05:24.678"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.678" endtime="20231120 21:05:24.678"/>
</kw>
<kw name="Input Credentials">
<arg>!!!!!!!!!!!!!!!</arg>
<arg>timo1234</arg>
<kw name="Input New Command" library="AppLibrary">
<arg>login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<msg timestamp="20231120 21:05:24.679" level="INFO">Executing command: login with arguments: ('!!!!!!!!!!!!!!!', 'timo1234')</msg>
<status status="PASS" starttime="20231120 21:05:24.679" endtime="20231120 21:05:24.679"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.679" endtime="20231120 21:05:24.679"/>
</kw>
<kw name="Output Should Contain">
<arg>Invalid username format</arg>
<kw name="Log" library="BuiltIn">
<arg>Verifying output: ${expected_output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 21:05:24.679" level="INFO">Verifying output: Invalid username format</msg>
<status status="PASS" starttime="20231120 21:05:24.679" endtime="20231120 21:05:24.679"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.679" endtime="20231120 21:05:24.679"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.677" endtime="20231120 21:05:24.680"/>
</test>
<test id="s1-s2-t5" name="Register With Valid Username And Too Short Password" line="23">
<kw name="Create User And Input Login Command" type="SETUP">
<kw name="Create User" library="AppLibrary">
<arg>kalle</arg>
<arg>kalle123</arg>
<msg timestamp="20231120 21:05:24.680" level="INFO">Creating user: kalle, kalle123</msg>
<status status="PASS" starttime="20231120 21:05:24.680" endtime="20231120 21:05:24.681"/>
</kw>
<kw name="Input New Command" library="AppLibrary">
<arg>login</arg>
<arg>kalle</arg>
<arg>kalle123</arg>
<msg timestamp="20231120 21:05:24.681" level="INFO">Executing command: login with arguments: ('kalle', 'kalle123')</msg>
<status status="PASS" starttime="20231120 21:05:24.681" endtime="20231120 21:05:24.681"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.680" endtime="20231120 21:05:24.681"/>
</kw>
<kw name="Input Credentials">
<arg>aapo</arg>
<arg>a</arg>
<kw name="Input New Command" library="AppLibrary">
<arg>login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<msg timestamp="20231120 21:05:24.681" level="INFO">Executing command: login with arguments: ('aapo', 'a')</msg>
<status status="PASS" starttime="20231120 21:05:24.681" endtime="20231120 21:05:24.681"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.681" endtime="20231120 21:05:24.681"/>
</kw>
<kw name="Output Should Contain">
<arg>Invalid password</arg>
<kw name="Log" library="BuiltIn">
<arg>Verifying output: ${expected_output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 21:05:24.682" level="INFO">Verifying output: Invalid password</msg>
<status status="PASS" starttime="20231120 21:05:24.682" endtime="20231120 21:05:24.682"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.681" endtime="20231120 21:05:24.682"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.680" endtime="20231120 21:05:24.682"/>
</test>
<test id="s1-s2-t6" name="Register With Valid Username And Long Enough Password Containing Only Letters" line="27">
<kw name="Create User And Input Login Command" type="SETUP">
<kw name="Create User" library="AppLibrary">
<arg>kalle</arg>
<arg>kalle123</arg>
<msg timestamp="20231120 21:05:24.684" level="INFO">Creating user: kalle, kalle123</msg>
<status status="PASS" starttime="20231120 21:05:24.683" endtime="20231120 21:05:24.684"/>
</kw>
<kw name="Input New Command" library="AppLibrary">
<arg>login</arg>
<arg>kalle</arg>
<arg>kalle123</arg>
<msg timestamp="20231120 21:05:24.684" level="INFO">Executing command: login with arguments: ('kalle', 'kalle123')</msg>
<status status="PASS" starttime="20231120 21:05:24.684" endtime="20231120 21:05:24.684"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.683" endtime="20231120 21:05:24.684"/>
</kw>
<kw name="Input Credentials">
<arg>aapo</arg>
<arg>asdfghjklqwe</arg>
<kw name="Input New Command" library="AppLibrary">
<arg>login</arg>
<arg>${username}</arg>
<arg>${password}</arg>
<msg timestamp="20231120 21:05:24.685" level="INFO">Executing command: login with arguments: ('aapo', 'asdfghjklqwe')</msg>
<status status="PASS" starttime="20231120 21:05:24.684" endtime="20231120 21:05:24.685"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.684" endtime="20231120 21:05:24.685"/>
</kw>
<kw name="Output Should Contain">
<arg>New user registered</arg>
<kw name="Log" library="BuiltIn">
<arg>Verifying output: ${expected_output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231120 21:05:24.685" level="INFO">Verifying output: New user registered</msg>
<status status="PASS" starttime="20231120 21:05:24.685" endtime="20231120 21:05:24.685"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.685" endtime="20231120 21:05:24.685"/>
</kw>
<status status="PASS" starttime="20231120 21:05:24.683" endtime="20231120 21:05:24.686"/>
</test>
<status status="PASS" starttime="20231120 21:05:24.661" endtime="20231120 21:05:24.686"/>
</suite>
<status status="PASS" starttime="20231120 21:05:24.621" endtime="20231120 21:05:24.687"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Login">Tests.Login</stat>
<stat pass="6" fail="0" skip="0" id="s1-s2" name="Register">Tests.Register</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
